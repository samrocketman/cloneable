/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/tutorial_groovy_projects.html
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'
}

ext.groovyVersion = System.getenv('GROOVY_VERSION')?: '2.4.21'
rootProject.version = "${version}"

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileGroovy {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation "org.codehaus.groovy:groovy:${groovyVersion}"
    implementation "org.codehaus.groovy:groovy-templates:${groovyVersion}"
    implementation "org.codehaus.groovy:groovy-json:${groovyVersion}"
    implementation 'info.picocli:picocli:4.7.6'
    //implementation 'org.codehaus.groovy:groovy-all:3.0.3'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.73'
    implementation 'org.yaml:snakeyaml:1.33'
    implementation('net.gleske:jervis:2.0.1') {
        transitive = false
    }
    testImplementation "org.spockframework:spock-core:1.3-groovy-2.4"
}

jar {
    manifest {
        // Application-Name must match isApplicableManifest() in source file:
        // src/main/groovy/cloneable/ManifestVersionProvider.groovy
        attributes 'Main-Class': 'cloneable.App',
                   'Application-Name': rootProject.name,
                   'Application-Version': version,
                   'Application-Git-Hash': ['git', 'rev-parse', 'HEAD'].execute()?.text?.trim()
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    excludes = ['META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA']

    //archiveName = "${rootProject.name}.jar"
    archiveFileName = "${rootProject.name}.jar"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
